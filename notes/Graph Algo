Graph and its representations
https://www.geeksforgeeks.org/graph-and-its-representations/amp/

Breadth First Search or BFS for a Graph
https://www.geeksforgeeks.org/breadth-first-search-or-bfs-for-a-graph/amp/

Applications of Breadth First Traversal
https://www.geeksforgeeks.org/applications-of-breadth-first-traversal/amp/

Depth First Search or DFS for a Graph
https://www.geeksforgeeks.org/depth-first-search-or-dfs-for-a-graph/amp/

Applications of Depth First Search
https://www.geeksforgeeks.org/applications-of-depth-first-search/amp/


Shortest Path:
	
	Bellman–Ford Algorithm ( from source to all vertices in the given graph. )
	https://www.geeksforgeeks.org/bellman-ford-algorithm-dp-23/amp/

	Dijkstra’s shortest path algorithm in Java using PriorityQueue (from source to all vertices in the given graph.No Negative )
	https://www.geeksforgeeks.org/dijkstras-shortest-path-algorithm-in-java-using-priorityqueue/amp/
	
	Floyd Warshall Algorithm ( find shortest distances between every pair of vertices )
	https://www.geeksforgeeks.org/floyd-warshall-algorithm-dp-16/amp/

	Shortest path in a Binary Maze (Lee Algorithm)
	https://www.geeksforgeeks.org/shortest-path-in-a-binary-maze/amp/

Minimum Spanning Tree:
	
	Prim’s Minimum Spanning Tree (MST) 
	https://www.geeksforgeeks.org/prims-minimum-spanning-tree-mst-greedy-algo-5/amp/
	
	Kruskal’s Minimum Spanning Tree Algorithm	
	https://www.geeksforgeeks.org/kruskals-minimum-spanning-tree-algorithm-greedy-algo-2/amp



Flood-fill Algorithm:
	https://www.hackerearth.com/practice/algorithms/graphs/flood-fill-algorithm/tutorial/


Topological Sorting:

	DFS:
	https://www.geeksforgeeks.org/topological-sorting/amp/

	Kahn’s algorithm for Topological Sorting
	https://www.geeksforgeeks.org/topological-sorting-indegree-based-solution/amp/

Cycle Detection:

	Undirected:
		
		Union-Find:
		https://www.geeksforgeeks.org/union-find/amp/
		
		DFS:
		https://www.geeksforgeeks.org/detect-cycle-undirected-graph/amp/

		BFS:
		https://www.geeksforgeeks.org/detect-cycle-in-an-undirected-graph-using-bfs/amp/

	Directed:

		Detect Cycle in a Directed Graph using DFS (Back edge)
		https://www.geeksforgeeks.org/detect-cycle-in-a-graph/amp/
	
	
Negative Cycle:

	Detecting negative cycle using Floyd Warshall
	https://www.geeksforgeeks.org/detecting-negative-cycle-using-floyd-warshall/amp/

	Detect a negative cycle in a Graph using Bellman Ford
	https://www.geeksforgeeks.org/detect-negative-cycle-graph-bellman-ford/amp/

Check if a graph is strongly connected | Set 1 (Kosaraju using DFS)
https://www.geeksforgeeks.org/connectivity-in-a-directed-graph/amp/
		

Applications of Minimum Spanning Tree Problem
https://www.geeksforgeeks.org/applications-of-minimum-spanning-tree/amp/

